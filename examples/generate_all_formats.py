"""
AWA Platform - Example Usage for All Formats
Demonstrates how to generate all content types from a PDF
"""

import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

from modules.pdf_processor import PDFProcessor
from modules.presentation_generator import PresentationGenerator
from modules.report_generator import ReportGenerator
from modules.excel_generator import ExcelGenerator


def example_generate_all(pdf_path: str, title: str):
    """
    Example: Generate all formats from a PDF
    
    Args:
        pdf_path: Path to PDF file
        title: Content title
    """
    print("="*70)
    print(f"  Generating All Formats from PDF")
    print("="*70)
    print(f"\nPDF: {pdf_path}")
    print(f"Title: {title}\n")
    
    # Step 1: Process PDF
    print("Step 1: Processing PDF...")
    processor = PDFProcessor(pdf_path)
    text_chunks = processor.split_into_chunks(300)
    print(f"âœ“ Extracted {len(text_chunks)} text chunks\n")
    
    # Step 2: Generate PowerPoint
    print("Step 2: Generating PowerPoint Presentation...")
    ppt_gen = PresentationGenerator()
    ppt_path = ppt_gen.generate_from_chunks(
        text_chunks,
        title=title,
        subtitle="Generated by AWA AI Platform"
    )
    print(f"âœ“ PowerPoint created: {ppt_path}\n")
    
    # Step 3: Generate Word Report
    print("Step 3: Generating Word Report...")
    report_gen = ReportGenerator()
    word_path = report_gen.generate_word_report(
        text_chunks,
        title=title,
        subtitle="Professional Report - Generated by AWA AI Platform"
    )
    print(f"âœ“ Word report created: {word_path}\n")
    
    # Step 4: Generate PDF Report
    print("Step 4: Generating PDF Report...")
    pdf_path_out = report_gen.generate_pdf_report(
        text_chunks,
        title=title,
        subtitle="Professional Report - Generated by AWA AI Platform"
    )
    print(f"âœ“ PDF report created: {pdf_path_out}\n")
    
    # Step 5: Generate Excel
    print("Step 5: Generating Excel Spreadsheet...")
    excel_gen = ExcelGenerator()
    excel_path = excel_gen.generate_from_chunks(
        text_chunks,
        title=title
    )
    print(f"âœ“ Excel file created: {excel_path}\n")
    
    # Summary
    print("="*70)
    print("  Generation Complete!")
    print("="*70)
    print(f"\nGenerated Files:")
    print(f"  1. PowerPoint: {ppt_path}")
    print(f"  2. Word Report: {word_path}")
    print(f"  3. PDF Report: {pdf_path_out}")
    print(f"  4. Excel File: {excel_path}")
    print()


def example_powerpoint_only(pdf_path: str, title: str):
    """
    Example: Generate only PowerPoint presentation
    
    Args:
        pdf_path: Path to PDF file
        title: Presentation title
    """
    print("\n" + "="*70)
    print("  Generating PowerPoint Presentation Only")
    print("="*70)
    
    # Process PDF
    processor = PDFProcessor(pdf_path)
    text_chunks = processor.split_into_chunks(300)
    
    # Generate PowerPoint with custom config
    config = {
        'theme': 'professional',
        'title_font_size': 48,
        'content_font_size': 20,
        'title_color': (0, 51, 102),
        'content_color': (0, 0, 0)
    }
    
    ppt_gen = PresentationGenerator(config)
    ppt_path = ppt_gen.generate_from_chunks(
        text_chunks,
        title=title,
        subtitle="Professional Presentation"
    )
    
    print(f"âœ“ PowerPoint created: {ppt_path}")


def example_report_only(pdf_path: str, title: str):
    """
    Example: Generate only Word and PDF reports
    
    Args:
        pdf_path: Path to PDF file
        title: Report title
    """
    print("\n" + "="*70)
    print("  Generating Professional Reports Only")
    print("="*70)
    
    # Process PDF
    processor = PDFProcessor(pdf_path)
    text_chunks = processor.split_into_chunks(500)  # Longer chunks for reports
    
    # Generate reports with custom config
    config = {
        'page_size': 'A4',
        'title_font_size': 28,
        'heading_font_size': 18,
        'content_font_size': 12,
        'title_color': (0, 51, 102)
    }
    
    report_gen = ReportGenerator(config)
    
    # Word report
    word_path = report_gen.generate_word_report(
        text_chunks,
        title=title,
        subtitle="Comprehensive Professional Report"
    )
    print(f"âœ“ Word report created: {word_path}")
    
    # PDF report
    pdf_path = report_gen.generate_pdf_report(
        text_chunks,
        title=title,
        subtitle="Comprehensive Professional Report"
    )
    print(f"âœ“ PDF report created: {pdf_path}")


if __name__ == '__main__':
    # Example usage
    # Replace with your own PDF file path
    example_pdf = "../20230915_PetShopStandards_V1_AR_FINAL.pdf"
    
    if os.path.exists(example_pdf):
        print("\nðŸš€ AWA Platform - Example Usage Demo\n")
        
        # Example 1: Generate all formats
        example_generate_all(example_pdf, "Pet Shop Standards Guide")
        
        # Example 2: PowerPoint only
        # example_powerpoint_only(example_pdf, "Pet Shop Standards")
        
        # Example 3: Reports only
        # example_report_only(example_pdf, "Pet Shop Standards Report")
    else:
        print(f"PDF file not found: {example_pdf}")
        print("Please update the example_pdf variable with a valid PDF path")
